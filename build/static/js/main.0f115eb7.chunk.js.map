{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/CentreInfo.js","components/Booth.js","components/Booths.js","App.js","index.js"],"names":["AppReducer","state","action","type","payload","booth","cardmachine","console","log","booths","centre","initialState","location","vo","vocount","date","bags","green","blue","dxlabel","dxseal","lip","apdirect","resubs","details","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","updateCentre","info","updateVo","CentreInfo","useContext","useState","centreInfo","setCentreInfo","useEffect","credit","debit","payzone","mobile","diff","total","setTotal","calc","className","placeholder","onChange","val","target","prevState","title","min","id","cols","rows","Booth","props","name","exp1","exp2","setVo","handleUpdate","cardMatch","difference","Math","abs","number","max","Booths","showBooths","setShowBooths","data","cur","i","push","onClick","fetch","method","headers","body","JSON","stringify","then","res","json","window","open","file","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f115eb7.chunk.js","sourcesContent":["export default function AppReducer (state, action) {\n    switch(action.type) {\n        case 'UPDATE_VO':\n            const { booth, cardmachine } = action.payload;\n            console.log(booth, cardmachine);\n            if (!booth || cardmachine === 0) {\n                return state;\n            }\n            return {\n                ...state,\n                booths: {\n                    ...state.booths,\n                    [booth]: action.payload\n                }\n            };\n        case 'UPDATE_CENTRE':\n            return {\n                ...state,\n                centre: action.payload\n            };\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState = {\n    centre: {\n        location: '',\n        vo: '',\n        vocount: 1,\n        date: '09/11/2021',\n        bags: {\n            green: 0,\n            blue: 0\n        },\n        dxlabel: '',\n        dxseal: '',\n        lip: 0,\n        apdirect: 0,\n        resubs: 0,\n        details: ''\n    },\n    booths: {}\n}\n\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    function updateCentre(info) {\n        dispatch({\n            type: 'UPDATE_CENTRE',\n            payload: info\n        });\n    }\n\n    function updateVo(vo) {\n        dispatch({\n            type: 'UPDATE_VO',\n            payload: vo\n        });\n    }\n\n    return (\n    <GlobalContext.Provider value={{\n        centre: state.centre,\n        booths: state.booths,\n        updateCentre,\n        updateVo\n    }}>\n        {children}\n    </GlobalContext.Provider>\n    );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport default function CentreInfo() {\n    const { updateCentre, booths } = useContext(GlobalContext);\n    const [ centreInfo, setCentreInfo ] = useState({\n        location: '',\n        vo: '',\n        vocount: 1,\n        date: '2021-07-11',\n        bags: {\n            green: 0,\n            blue: 0\n        },\n        dxlabel: '',\n        dxseal: '',\n        lip: 0,\n        apdirect: 0,\n        resubs: 0,\n        details: ''\n    });\n\n    useEffect(() => {\n        updateCentre(centreInfo);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [centreInfo]);\n\n    const [total, setTotal] = useState({\n        credit: 0,\n        debit: 0,\n        payzone: 0,\n        mobile: 0,\n        cardmachine: 0,\n        diff: 0\n    });\n\n    useEffect(() => {\n        var calc = {\n            credit: 0,\n            debit: 0,\n            payzone: 0,\n            mobile: 0,\n            cardmachine: 0,\n            diff: 0\n        };\n        for (var booth in booths) {\n            calc.credit += booths[booth].credit;\n            calc.debit += booths[booth].debit;\n            calc.payzone += booths[booth].payzone;\n            calc.mobile += booths[booth].mobile;\n            calc.cardmachine += booths[booth].cardmachine;\n            calc.diff += booths[booth].diff;\n        }\n        setTotal(calc);\n    }, [booths]);\n    \n    return (\n        <>\n        <div className=\"card shadow mb-3\">\n            <div className=\"card-header\">\n                <h5>Centre Info</h5>\n            </div>\n            <div className=\"card-body\">\n                <p>Set centre name, date and booth count.</p>\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-5\">\n                            <label>Centre Name</label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"eg. Santry\"\n                                value={centreInfo.location}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, location: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-4\">\n                            <label title=\"Your name\">VO Name</label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"eg. Jakub\"\n                                value={centreInfo.vo}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, vo: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-3\">\n                            <label>VO Count</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                min=\"1\" \n                                value={centreInfo.vocount}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, vocount: +val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label>Report Date</label>\n                    <input \n                        type=\"date\" \n                        className=\"form-control\"\n                        value={centreInfo.date} \n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, date: val }\n                            });\n                          }}\n                    />\n                </div>\n                <hr />\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <label>Green Bags</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                min=\"0\" \n                                value={centreInfo.bags.green}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, bags: {...prevState.bags, green: val} }\n                                    });\n                                  }}\n                                 />\n                        </div>\n                        <div className=\"col-6\">\n                            <label>Blue Bags</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                min=\"0\" \n                                value={centreInfo.bags.blue} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, bags: {...prevState.bags, blue: val} }\n                                    });\n                                  }}\n                                />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label>DX Label Number</label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        placeholder=\"eg. 13100101584507\"\n                        value={centreInfo.dxlabel} \n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, dxlabel: val }\n                            });\n                          }}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label>DX Seal Number</label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        placeholder=\"eg. 7912350\"\n                        value={centreInfo.dxseal} \n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, dxseal: val }\n                            });\n                          }}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <label title=\"Lost in post total\">LIP Total</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                id=\"no\" \n                                value={centreInfo.lip} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, lip: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-4\">\n                            <label>AP Direct Total</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                value={centreInfo.apdirect} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, apdirect: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-4\">\n                            <label title=\"Resubmissions Total\">Resub Total</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                value={centreInfo.resubs} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, resubs: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label>Payment Discrepancy Details</label>\n                    <textarea \n                        cols=\"30\" \n                        rows=\"10\" \n                        className=\"form-control\" \n                        placeholder=\"eg. -€20 EXP2 on card machine\"\n                        value={centreInfo.details}\n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, details: val }\n                            });\n                          }}\n                    ></textarea>\n                </div>\n            </div>\n        </div>\n        <div className=\"card shadow mb-3 sticky-top\">\n            <div className=\"card-header\">\n                <h5>Running Totals</h5>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <div className=\"col-6 border-end\">\n                        <p>Credit Card: €{total.credit}</p>\n                        <p>Debit Card: €{total.debit}</p>\n                        <hr />\n                        <p>Total(Minus EXP): €{(total.credit + total.debit) - total.diff}</p>\n                        <p>Card Machine: €{total.cardmachine}</p>\n                    </div>\n                    <div className=\"col-6\">\n                        <p>Payzone: €{total.payzone}</p>\n                        <p>Mobile Payments: €{total.mobile}</p>\n                        <p>EXP Difference: €{total.diff}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}","import React, { useEffect, useState } from 'react';\n\nexport default function Booth(props) {\n    const [vo, setVo] = useState({\n        name: '',\n        booth: '',\n        credit: 0,\n        debit: 0,\n        payzone: 0,\n        mobile: 0,\n        cardmachine: 0,\n        exp1: 0,\n        exp2: 0,\n        diff: 0\n    });\n\n    useEffect(() => {\n        props.handleUpdate(vo);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [vo]);\n\n    var cardMatch = '';\n    if (vo.credit + vo.debit !== vo.cardmachine && vo.cardmachine) {\n        var difference = Math.abs((vo.credit + vo.debit) - vo.cardmachine);\n        if (difference === vo.diff) {\n            cardMatch = <p className=\"text-success\">Card payments match.</p>;\n        } else {\n            cardMatch = <p className=\"text-danger\">Card payment mismatch(Account for €{difference}).</p>;\n        }\n    } else if (vo.credit + vo.debit === vo.cardmachine && vo.cardmachine) {\n        cardMatch = <p className=\"text-success\">Card payments match.</p>;\n    }\n    return (\n        <div className=\"card shadow mb-3\">\n            <div className=\"card-header\">\n                <h5>Report for VO {props.number}</h5>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">VO</span>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"eg. Jakub\" \n                                    value={vo.name}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            return { ...prevState, name: val }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">Booth</span>\n                                <input \n                                    type=\"number\" \n                                    min=\"1\" \n                                    max=\"10\" \n                                    placeholder=\"eg. 1\" \n                                    className=\"form-control\" \n                                    value={vo.booth}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, booth: val };\n                                            } else {\n                                                return { ...prevState, booth: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-6 border-end\">\n                            <p>Payments</p>\n                            <label>Credit Card</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Credit Card total from FO\"\n                                    value={vo.credit}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, credit: val };\n                                            } else {\n                                                return { ...prevState, credit: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <label>Debit Card</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\" \n                                    placeholder=\"Debit Card total from FO\"\n                                    value={vo.debit}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, debit: val };\n                                            } else {\n                                                return { ...prevState, debit: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <label>Payzone</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Payzone total from FO\"\n                                    value={vo.payzone}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, payzone: val };\n                                            } else {\n                                                return { ...prevState, payzone: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <label>Mobile Payment</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Mobile Payment total from FO\"\n                                    value={vo.mobile}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, mobile: val };\n                                            } else {\n                                                return { ...prevState, mobile: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <label>Card Machine</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Card Machine total from batch\"\n                                    value={vo.cardmachine}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, cardmachine: val };\n                                            } else {\n                                                return { ...prevState, cardmachine: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <p>Exceptions</p>\n                            <label>EXP 1</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\"\n                                value={vo.exp1}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setVo(prevState => {\n                                        if (val === '') {\n                                            return { ...prevState, exp1: val };\n                                        } else {\n                                            return { ...prevState, exp1: +val };\n                                        }\n                                    });\n                                }}\n                            />\n                            <label>EXP 2</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                value={vo.exp2}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setVo(prevState => {\n                                        if (val === '') {\n                                            return { ...prevState, exp2: val };\n                                        } else {\n                                            return { ...prevState, exp2: +val };\n                                        }\n                                    });\n                                }}\n                            />\n                            <label>EXP Difference</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    value={vo.diff}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, diff: val };\n                                            } else {\n                                                return { ...prevState, diff: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {cardMatch}\n            </div>\n        </div>\n    );\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Booth from './Booth';\n\nexport default function Booths() {\n    const {centre, booths, updateVo} = useContext(GlobalContext);\n    const [showBooths, setShowBooths] = useState([]);\n\n    function getFile() {\n        fetch(\"/submit\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            centre: centre,\n            booths: booths\n          })\n        })\n          .then((res) => res.json())\n          .then((data) => {\n                window.open(`/download/${data.file}`, '_blank');\n          });\n    }\n\n    useEffect(() => {\n        var cur = [];\n        for (let i = 0; i < centre.vocount; i++) {\n            cur.push(<Booth \n                key={i} \n                number={i + 1}\n                handleUpdate={handleUpdate} />);\n        }\n        setShowBooths(cur);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [centre]);\n\n    function handleUpdate(data) {\n        updateVo(data);\n    }\n    \n    return (\n        <div>\n            {showBooths}\n            <button \n                className=\"btn btn-success shadow-lg mb-3 float-end\"\n                onClick={getFile}\n            >Get Report</button>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport { GlobalProvider } from './context/GlobalState';\nimport CentreInfo from './components/CentreInfo';\nimport Booths from './components/Booths';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"container\">\n        <h1>EOD Generator</h1>\n          <small>End of day report generator</small>\n          <hr />\n          <div className=\"row\">\n              <div className=\"col-12 col-md-4\">\n                <CentreInfo />\n              </div>\n              <div className=\"col-12 col-md-8\">\n                <Booths />\n              </div>\n          </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}