{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/CentreInfo.js","components/Booth.js","components/Booths.js","App.js","index.js"],"names":["AppReducer","state","action","type","payload","booth","cardmachine","booths","centre","initialState","location","vo","vocount","date","bags","green","blue","dxlabel","dxseal","lip","apdirect","resubs","details","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","updateCentre","info","updateVo","d","Date","day","getDate","month","getMonth","year","getFullYear","CentreInfo","useContext","useState","centreInfo","setCentreInfo","useEffect","disable","setDisable","credit","debit","payzone","mobile","diff","total","setTotal","calc","className","placeholder","onChange","val","target","prevState","title","min","disabled","id","cols","rows","Booth","props","name","exp1","exp2","setVo","handleUpdate","cardMatch","difference","Math","abs","number","max","onBlur","Booths","showBooths","setShowBooths","a","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","window","open","file","cur","i","push","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37927af5.chunk.js","sourcesContent":["export default function AppReducer (state, action) {\n    switch(action.type) {\n        case 'UPDATE_VO':\n            const { booth, cardmachine } = action.payload;\n            if (!booth || cardmachine === 0) {\n                return state;\n            }\n            return {\n                ...state,\n                booths: {\n                    ...state.booths,\n                    [booth]: action.payload\n                }\n            };\n        case 'UPDATE_CENTRE':\n            return {\n                ...state,\n                centre: action.payload\n            };\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState = {\n    centre: {\n        location: '',\n        vo: '',\n        vocount: 1,\n        date: '09/11/2021',\n        bags: {\n            green: 0,\n            blue: 0\n        },\n        dxlabel: '',\n        dxseal: '',\n        lip: 0,\n        apdirect: 0,\n        resubs: 0,\n        details: ''\n    },\n    booths: {}\n}\n\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    function updateCentre(info) {\n        dispatch({\n            type: 'UPDATE_CENTRE',\n            payload: info\n        });\n    }\n\n    function updateVo(vo) {\n        dispatch({\n            type: 'UPDATE_VO',\n            payload: vo\n        });\n    }\n\n    return (\n    <GlobalContext.Provider value={{\n        centre: state.centre,\n        booths: state.booths,\n        updateCentre,\n        updateVo\n    }}>\n        {children}\n    </GlobalContext.Provider>\n    );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction date() {\n    var d = new Date();\n    var day = d.getDate();\n    var month = d.getMonth() + 1;\n    var year = d.getFullYear();\n    return `${year}-${month}-${day}`;\n}\n\nexport default function CentreInfo() {\n    const { updateCentre, booths } = useContext(GlobalContext);\n    const [ centreInfo, setCentreInfo ] = useState({\n        location: 'Santry',\n        vo: '',\n        vocount: 1,\n        date: date(),\n        bags: {\n            green: 0,\n            blue: 1\n        },\n        dxlabel: '',\n        dxseal: '',\n        lip: 0,\n        apdirect: 0,\n        resubs: 0,\n        details: ''\n    });\n\n    useEffect(() => {\n        updateCentre(centreInfo);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [centreInfo]);\n\n    const [disable, setDisable] = useState(false);\n\n    const [total, setTotal] = useState({\n        credit: 0,\n        debit: 0,\n        payzone: 0,\n        mobile: 0,\n        cardmachine: 0,\n        diff: 0\n    });\n\n    useEffect(() => {\n        var calc = {\n            credit: 0,\n            debit: 0,\n            payzone: 0,\n            mobile: 0,\n            cardmachine: 0,\n            diff: 0\n        };\n        for (var booth in booths) {\n            calc.credit += booths[booth].credit;\n            calc.debit += booths[booth].debit;\n            calc.payzone += booths[booth].payzone;\n            calc.mobile += booths[booth].mobile;\n            calc.cardmachine += booths[booth].cardmachine;\n            calc.diff += booths[booth].diff;\n        }\n        setTotal(calc);\n    }, [booths]);\n    \n    return (\n        <>\n        <div className=\"card shadow mb-3\">\n            <div className=\"card-header\">\n                <h5>Centre Info</h5>\n            </div>\n            <div className=\"card-body\">\n                <p>Set centre name, date and booth count.</p>\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-5\">\n                            <label>Centre Name</label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"eg. Santry\"\n                                value={centreInfo.location}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, location: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-4\">\n                            <label title=\"Your name\">VO Name</label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"eg. Jakub\"\n                                value={centreInfo.vo}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, vo: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-3\">\n                            <label>VO Count</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                min=\"1\" \n                                value={centreInfo.vocount}\n                                disabled={disable}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, vocount: +val }\n                                    });\n                                    if (val > 1) {\n                                        setDisable(true);\n                                    }\n                                  }}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label>Report Date</label>\n                    <input \n                        type=\"date\" \n                        className=\"form-control\"\n                        value={centreInfo.date} \n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, date: val }\n                            });\n                          }}\n                    />\n                </div>\n                <hr />\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <label>Green Bags</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                min=\"0\" \n                                value={centreInfo.bags.green}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, bags: {...prevState.bags, green: val} }\n                                    });\n                                  }}\n                                 />\n                        </div>\n                        <div className=\"col-6\">\n                            <label>Blue Bags</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                min=\"0\" \n                                value={centreInfo.bags.blue} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, bags: {...prevState.bags, blue: val} }\n                                    });\n                                  }}\n                                />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label>DX Label Number</label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        placeholder=\"eg. 13100101584507\"\n                        value={centreInfo.dxlabel} \n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, dxlabel: val }\n                            });\n                          }}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label>DX Seal Number</label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        placeholder=\"eg. 7912350\"\n                        value={centreInfo.dxseal} \n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, dxseal: val }\n                            });\n                          }}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <label title=\"Lost in post total\">LIP Total</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                id=\"no\" \n                                value={centreInfo.lip} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, lip: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-4\">\n                            <label>AP Direct Total</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                value={centreInfo.apdirect} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, apdirect: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                        <div className=\"col-4\">\n                            <label title=\"Resubmissions Total\">Resub Total</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                value={centreInfo.resubs} \n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setCentreInfo(prevState => {\n                                      return { ...prevState, resubs: val }\n                                    });\n                                  }}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label>Payment Discrepancy Details</label>\n                    <textarea \n                        cols=\"30\" \n                        rows=\"10\" \n                        className=\"form-control\" \n                        placeholder=\"eg. -€20 EXP2 on card machine\"\n                        value={centreInfo.details}\n                        onChange={({target}) => {\n                            const val = target.value;\n                            setCentreInfo(prevState => {\n                              return { ...prevState, details: val }\n                            });\n                          }}\n                    ></textarea>\n                </div>\n            </div>\n        </div>\n        <div className=\"card shadow mb-3 sticky-top\">\n            <div className=\"card-header\">\n                <h5>Running Totals</h5>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <div className=\"col-6 border-end\">\n                        <p>Credit Card: €{total.credit}</p>\n                        <p>Debit Card: €{total.debit}</p>\n                        <hr />\n                        <p>Total(Minus EXP): €{(total.credit + total.debit) - total.diff}</p>\n                        <p>Card Machine: €{total.cardmachine}</p>\n                    </div>\n                    <div className=\"col-6\">\n                        <p>Payzone: €{total.payzone}</p>\n                        <p>Mobile Payments: €{total.mobile}</p>\n                        <p>EXP Difference: €{total.diff}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}","import React, { useEffect, useState } from 'react';\n\nexport default function Booth(props) {\n    const [vo, setVo] = useState({\n        name: '',\n        booth: '',\n        credit: 0,\n        debit: 0,\n        payzone: 0,\n        mobile: 0,\n        cardmachine: 0,\n        exp1: 0,\n        exp2: 0,\n        diff: 0\n    });\n\n    useEffect(() => {\n        props.handleUpdate(vo);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [vo]);\n\n    var cardMatch = '';\n    if (vo.credit + vo.debit !== vo.cardmachine && vo.cardmachine) {\n        var difference = Math.abs((vo.credit + vo.debit) - vo.cardmachine);\n        if (difference === vo.diff) {\n            cardMatch = <p className=\"text-success\">Card payments match.</p>;\n        } else {\n            cardMatch = <p className=\"text-danger\">Card payment mismatch(Account for €{difference}).</p>;\n        }\n    } else if (vo.credit + vo.debit === vo.cardmachine && vo.cardmachine) {\n        cardMatch = <p className=\"text-success\">Card payments match.</p>;\n    }\n    return (\n        <div className=\"card shadow mb-3\">\n            <div className=\"card-header\">\n                <h5>Report for VO {props.number}</h5>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">VO</span>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"eg. Jakub\" \n                                    value={vo.name}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            return { ...prevState, name: val }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">Booth</span>\n                                <input \n                                    type=\"number\" \n                                    min=\"1\" \n                                    max=\"10\" \n                                    placeholder=\"eg. 1\" \n                                    className=\"form-control\" \n                                    value={vo.booth}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, booth: val };\n                                            } else {\n                                                return { ...prevState, booth: +val };\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-6 border-end\">\n                            <p>Payments</p>\n                            <label>Credit Card</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Credit Card total from FO\"\n                                    value={vo.credit}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, credit: val };\n                                            } else {\n                                                return { ...prevState, credit: +val };\n                                            }\n                                        });\n                                    }}\n                                    onBlur={({target}) => {\n                                        if (target.value === '') {\n                                            setVo(prevState => {\n                                                return { ...prevState, credit: 0 };\n                                            });\n                                        }\n                                    }}\n                                />\n                            </div>\n                            <label>Debit Card</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\" \n                                    placeholder=\"Debit Card total from FO\"\n                                    value={vo.debit}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, debit: val };\n                                            } else {\n                                                return { ...prevState, debit: +val };\n                                            }\n                                        });\n                                    }}\n                                    onBlur={({target}) => {\n                                        if (target.value === '') {\n                                            setVo(prevState => {\n                                                return { ...prevState, debit: 0};\n                                            });\n                                        }\n                                    }}\n                                />\n                            </div>\n                            <label>Payzone</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Payzone total from FO\"\n                                    value={vo.payzone}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, payzone: val };\n                                            } else {\n                                                return { ...prevState, payzone: +val };\n                                            }\n                                        });\n                                    }}\n                                    onBlur={({target}) => {\n                                        if (target.value === '') {\n                                            setVo(prevState => {\n                                                return { ...prevState, payzone: 0};\n                                            });\n                                        }\n                                    }}\n                                />\n                            </div>\n                            <label>Mobile Payment</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Mobile Payment total from FO\"\n                                    value={vo.mobile}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, mobile: val };\n                                            } else {\n                                                return { ...prevState, mobile: +val };\n                                            }\n                                        });\n                                    }}\n                                    onBlur={({target}) => {\n                                        if (target.value === '') {\n                                            setVo(prevState => {\n                                                return { ...prevState, mobile: 0};\n                                            });\n                                        }\n                                    }}\n                                />\n                            </div>\n                            <label>Card Machine</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    placeholder=\"Card Machine total from batch\"\n                                    value={vo.cardmachine}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, cardmachine: val };\n                                            } else {\n                                                return { ...prevState, cardmachine: +val };\n                                            }\n                                        });\n                                    }}\n                                    onBlur={({target}) => {\n                                        if (target.value === '') {\n                                            setVo(prevState => {\n                                                return { ...prevState, cardmachine: 0};\n                                            });\n                                        }\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <p>Exceptions</p>\n                            <label>EXP 1</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\"\n                                value={vo.exp1}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setVo(prevState => {\n                                        if (val === '') {\n                                            return { ...prevState, exp1: val };\n                                        } else {\n                                            return { ...prevState, exp1: +val };\n                                        }\n                                    });\n                                }}\n                                onBlur={({target}) => {\n                                    if (target.value === '') {\n                                        setVo(prevState => {\n                                            return { ...prevState, exp1: 0};\n                                        });\n                                    }\n                                }}\n                            />\n                            <label>EXP 2</label>\n                            <input \n                                type=\"number\" \n                                className=\"form-control\" \n                                value={vo.exp2}\n                                onChange={({target}) => {\n                                    const val = target.value;\n                                    setVo(prevState => {\n                                        if (val === '') {\n                                            return { ...prevState, exp2: val };\n                                        } else {\n                                            return { ...prevState, exp2: +val };\n                                        }\n                                    });\n                                }}\n                                onBlur={({target}) => {\n                                    if (target.value === '') {\n                                        setVo(prevState => {\n                                            return { ...prevState, exp2: 0};\n                                        });\n                                    }\n                                }}\n                            />\n                            <label>EXP Difference</label>\n                            <div className=\"input-group\">\n                                <span className=\"input-group-text\">€</span>\n                                <input \n                                    type=\"number\" \n                                    className=\"form-control\"\n                                    value={vo.diff}\n                                    onChange={({target}) => {\n                                        const val = target.value;\n                                        setVo(prevState => {\n                                            if (val === '') {\n                                                return { ...prevState, diff: val };\n                                            } else {\n                                                return { ...prevState, diff: +val };\n                                            }\n                                        });\n                                    }}\n                                    onBlur={({target}) => {\n                                        if (target.value === '') {\n                                            setVo(prevState => {\n                                                return { ...prevState, diff: 0};\n                                            });\n                                        }\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {cardMatch}\n            </div>\n        </div>\n    );\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Booth from './Booth';\n\nexport default function Booths() {\n    const {centre, booths, updateVo} = useContext(GlobalContext);\n    const [showBooths, setShowBooths] = useState([]);\n    // const [mailto, setMailto] = useState('mailto:ie.ops.agne@sgs.com,ie.finance.agne@sgs.com?subject=EOD%20Report%20CENTRE%20DATE');\n\n    async function getFile1() {\n        await fetch(\"/submit\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            centre: centre,\n            booths: booths\n          })\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data);\n            window.open(`/download/${data.file}`, '_blank');\n        });\n    }\n\n    async function getFile2() {\n        await fetch(\"/submit2\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            centre: centre,\n            booths: booths\n          })\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data);\n            window.open(`/download/${data.file}`, '_blank');\n        });\n    }\n\n    useEffect(() => {\n        var cur = [];\n        for (let i = 0; i < centre.vocount; i++) {\n            cur.push(<Booth \n                key={i} \n                number={i + 1}\n                handleUpdate={handleUpdate} />);\n        }\n        setShowBooths(cur);\n\n        //mailto\n        // var [year, month, day] = centre.date.split(\"-\");\n        // var date = `${day}/${month}/${year}`;\n        // setMailto(`mailto:ie.ops.agne@sgs.com,ie.finance.agne@sgs.com?subject=EOD%20Report%20${centre.location}%20${date}`);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [centre]);\n\n    function handleUpdate(data) {\n        updateVo(data);\n    }\n    \n    return (\n        <div>\n            {showBooths}\n            <div className=\"button-group float-end\">\n                <button \n                    className=\"btn btn-success shadow-lg mb-3\"\n                    onClick={getFile1}\n                >\n                    <i className=\"fas fa-cloud-download-alt me-1\"> </i>\n                    Get Report\n                </button>\n                <button \n                    className=\"btn btn-primary shadow-lg ms-2 mb-3\"\n                    onClick={getFile2}\n                >\n                    Get EOD Sheet\n                </button>\n            </div>\n            \n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport { GlobalProvider } from './context/GlobalState';\nimport CentreInfo from './components/CentreInfo';\nimport Booths from './components/Booths';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"container\">\n        <h1>EOD Generator</h1>\n          <small>End of day report generator</small>\n          <hr />\n          <div className=\"row\">\n              <div className=\"col-12 col-md-4\">\n                <CentreInfo />\n              </div>\n              <div className=\"col-12 col-md-8\">\n                <Booths />\n              </div>\n          </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}